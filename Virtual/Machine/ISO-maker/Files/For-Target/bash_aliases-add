# If not already running, launch the vncserver whenever an interactive shell starts
pgrep x0vncserver > /dev/null
[[ $? -eq 1 ]] && (x0vncserver -display :0 -PasswordFile=/home/$myuser/.vnc/passwd >> /dev/null 2>&1 &)

# Modify prompt to keep track of git branches

parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

export PS1="\u@\h:\W\$(parse_git_branch)\[\033[00m\] $ "

# Stuff to be executed only the first time a user logs into an interactive shell
if [[ "$DISPLAY" != "" ]]; then # a displaymanager is running
    if [[ "$(pgrep finish.sh)" != "" ]]; then # finish script is still running 
	xfce4-terminal --geometry 80x12+0+0 --command "echo ; echo The machine is installing more software ; echo It will reboot one more time before it finishes. ; echo Please wait until that reboot before using it."
	# Monitor installations on the "finish" script
	xfce4-terminal --geometry 132x24+0-0 --command "bash -c 'tail -F /var/local/start-and-finish.log'"  
    fi
fi

if [ "$(ls -A /var/crash)" ]; then
    echo ''
    echo 'The /var/crash directory is not empty.  Its contents are:'
    echo ''
    echo 'ls -A /var/crash'
    echo ''
    ls -A /var/crash
    echo ''
    echo 'Messages about crashes can be cleared by executing the command:'
    echo ''
    cmd="sudo rm -f /var/crash/*"
    echo "$cmd"
    [[ "$DISPLAY" != "" ]] && echo "$cmd" | xclip -selection clipboard
    echo ''
fi

[[ -e /etc/environment ]] && source /etc/environment

# Allow cut-and-paste between emacs and shell
if [[ "$(which autocutsel)" != "" ]]; then
    if [[ "$DISPLAY" != "" ]]; then
	autocutsel -fork
	autocutsel -fork -selection PRIMARY
    fi
fi

# The first time the user has logged in, set preferences 
if [[ ! -e /home/econ-ark/.firstboot ]]; then
    # Don't shut screen down very fast 
    xfconf-query --channel xfce4-power-manager --property /xfce4-power-manager/blank-on-ac --set 1200
    xfconf-query --channel xfce4-power-manager --property /xfce4-power-manager/dpms-enabled --set false
    xfconf-query --channel xfce4-power-manager --property /xfce4-power-manager/lock-screen-suspend-hibernate --set false

    # Configure backdrop - can't be done in start.sh or finish.sh because dbus not running until GUI is up
    # Wait until it is up then get the name of the active monitor

    monitor=""  
    while [[ "$monitor" == "" ]] ; do # 
	monitor="$(xrandr --listactivemonitors | tail -n 1 | rev | cut -d' ' -f1 | rev)"
	sleep 1
    done

    monitorPath="/backdrop/screen0/monitor$monitor/workspace0/last-image"

    xfconf-query --channel xfce4-desktop --property "$monitorPath/last-image"  --set /usr/share/xfce4/backdrops/Econ-ARK-Logo-1536x768.jpg
    xfconf-query --channel xfce4-desktop --property "$monitorPath/image-style" --set 4 # Scaling

    # Set background to black

    xfconf-query --channel xfce4-desktop --property "$monitorPath/rgba1" --type double --set 0.0 --type double --set 0.0 --type double --set 0.0 --type double --set 1.0 > /dev/null 2>&1 # Don't print an error (if one occurs)

    if [[ $? != 0 ]]; then # the rgb property did not exist
	# so create it 
	    xfconf-query --create --channel xfce4-desktop --property "$monitorPath/rgba1" --type double --set 0.0 --type double --set 0.0 --type double --set 0.0 --type double --set 1.0
    fi
    touch /home/econ-ark/.firstboot
fi
